# Generated by Django 2.0.4 on 2018-04-13 15:18

import contacts.models
from django.db import migrations, models
import django.db.models.deletion
import smart_selects.db_fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('config', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Center',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('center_name', models.CharField(max_length=50)),
                ('city', models.CharField(blank=True, max_length=50)),
                ('center_category', models.CharField(choices=[('A', 'A Center'), ('B', 'B Center'), ('C', 'C Center')], default='A', max_length=1)),
                ('pre_center', models.BooleanField(default=False)),
                ('latitude', models.CharField(blank=True, max_length=15)),
                ('longitude', models.CharField(blank=True, max_length=15)),
                ('parent_center', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contacts.Center')),
            ],
            options={
                'verbose_name': 'IPC Center',
                'ordering': ['center_name'],
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, verbose_name='first Name')),
                ('last_name', models.CharField(max_length=50, verbose_name='last Name')),
                ('teacher_tno', models.CharField(blank=True, max_length=7, verbose_name='teacher number')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='date of birth')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('TG', 'Transgender')], max_length=2)),
                ('category', models.CharField(choices=[('BR', 'Bramhachari'), ('FTT', 'Full Time Teacher'), ('PTT', 'Part Time Teacher'), ('FTV', 'Full Time Volunteer'), ('VOL', 'Volunteer'), ('STAFF', 'Staff'), ('SEV', 'Sevadhar')], max_length=6)),
                ('status', models.CharField(choices=[('ACTV', 'Active'), ('INACTV', 'Inactive'), ('EXPD', 'Deceased')], max_length=6)),
                ('marital_status', models.CharField(choices=[('M', 'Married'), ('S', 'Single'), ('U', 'Unknown')], default='U', max_length=2)),
                ('cug_mobile', models.CharField(blank=True, max_length=15, verbose_name='cUG phone number')),
                ('other_mobile_1', models.CharField(blank=True, max_length=15, verbose_name='alternate mobile 1')),
                ('other_mobile_2', models.CharField(blank=True, max_length=15, verbose_name='alternate mobile 2')),
                ('whatsapp_number', models.CharField(blank=True, max_length=15, verbose_name='whatsapp number')),
                ('primary_email', models.EmailField(max_length=50, unique=True, verbose_name='primary Email')),
                ('secondary_email', models.EmailField(blank=True, max_length=50, verbose_name='secondary Email')),
                ('pushbullet_token', models.CharField(blank=True, max_length=64, verbose_name='pushbullet Token')),
                ('pushover_token', models.CharField(blank=True, max_length=64, verbose_name='pushover Token')),
                ('id_card_type', models.CharField(blank=True, max_length=10, verbose_name='Ashram ID Card Type')),
                ('id_card_number', models.CharField(blank=True, max_length=20, verbose_name='Ashram ID Card Number')),
                ('id_proof_type', models.CharField(blank=True, choices=[('DL', 'Driving License'), ('PP', 'Passport'), ('RC', 'Ration Card'), ('VC', 'Voters ID'), ('AA', 'Aadhaar'), ('PC', 'PAN Card'), ('OT', 'Other Government Issued')], max_length=2, verbose_name='govt ID Proof Type')),
                ('id_proof_number', models.CharField(blank=True, max_length=30, verbose_name='govt ID Card Number')),
                ('id_proof_other', models.CharField(blank=True, max_length=30, verbose_name='type of govt ID if other')),
                ('id_proof_scan', models.ImageField(blank=True, upload_to=contacts.models._generate_idproof_path)),
                ('profile_picture', models.ImageField(blank=True, upload_to=contacts.models._generate_profile_path)),
                ('remarks', models.TextField(blank=True, max_length=500)),
            ],
            options={
                'verbose_name': 'IPC Contact',
                'ordering': ['first_name', 'last_name'],
            },
        ),
        migrations.CreateModel(
            name='ContactAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_type', models.CharField(choices=[('WO', 'Work'), ('HO', 'Home')], max_length=2, verbose_name='address Type')),
                ('address_line_1', models.CharField(max_length=100)),
                ('address_line_2', models.CharField(max_length=100)),
                ('address_line_3', models.CharField(blank=True, max_length=100)),
                ('city', models.CharField(max_length=50)),
                ('postal_code', models.CharField(max_length=10)),
                ('state', models.CharField(blank=True, max_length=25)),
                ('country', models.CharField(blank=True, max_length=25)),
                ('contact_number', models.CharField(blank=True, max_length=15, verbose_name='contact number for this address')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contacts.Contact')),
            ],
        ),
        migrations.CreateModel(
            name='ContactNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note_type', models.CharField(choices=[('IN', 'Information Note'), ('SC', 'Status Change'), ('CN', 'Critical Note'), ('MN', 'Medical Note')], default='IN', max_length=2)),
                ('note', models.TextField(max_length=500)),
                ('note_timestamp', models.DateTimeField(auto_now_add=True)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contacts.Contact')),
            ],
            options={
                'ordering': ['-note_timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ContactRoleGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contacts.Contact')),
            ],
        ),
        migrations.CreateModel(
            name='ContactTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contacts.Contact')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='config.Tag')),
            ],
            options={
                'ordering': ['contact', 'tag'],
            },
        ),
        migrations.CreateModel(
            name='IndividualContactRoleCenter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('center', smart_selects.db_fields.GroupedForeignKey(group_field='zone', on_delete=django.db.models.deletion.CASCADE, to='contacts.Center')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contacts.Contact')),
            ],
            options={
                'verbose_name': 'IPC center level contact role',
                'ordering': ['contact', 'role', 'center'],
            },
        ),
        migrations.CreateModel(
            name='IndividualContactRoleSector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contacts.Contact')),
            ],
            options={
                'verbose_name': 'IPC sector level contact role',
                'ordering': ['contact', 'role', 'sector'],
            },
        ),
        migrations.CreateModel(
            name='IndividualContactRoleZone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contacts.Contact')),
            ],
            options={
                'verbose_name': 'IPC zone level contact role',
                'ordering': ['contact', 'role', 'zone'],
            },
        ),
        migrations.CreateModel(
            name='IndividualRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_name', models.CharField(max_length=50, unique=True)),
                ('role_level', models.CharField(choices=[('ZO', 'Zone'), ('SC', 'Sector'), ('CE', 'Center')], max_length=2)),
                ('role_remarks', models.TextField(blank=True)),
                ('admin_role', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'IPC Role',
                'ordering': ['role_name', 'role_level'],
            },
        ),
        migrations.CreateModel(
            name='RoleGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_name', models.CharField(max_length=50, unique=True)),
                ('role_remarks', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'IPC Role Group',
                'ordering': ['role_name'],
            },
        ),
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sector_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zone_name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'IPC Zone',
                'ordering': ['zone_name'],
            },
        ),
        migrations.AddField(
            model_name='sector',
            name='zone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contacts.Zone'),
        ),
        migrations.AddField(
            model_name='individualcontactrolezone',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contacts.IndividualRole'),
        ),
        migrations.AddField(
            model_name='individualcontactrolezone',
            name='zone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contacts.Zone'),
        ),
        migrations.AddField(
            model_name='individualcontactrolesector',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contacts.IndividualRole'),
        ),
        migrations.AddField(
            model_name='individualcontactrolesector',
            name='sector',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contacts.Sector'),
        ),
        migrations.AddField(
            model_name='individualcontactrolecenter',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contacts.IndividualRole'),
        ),
        migrations.AddField(
            model_name='contactrolegroup',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contacts.RoleGroup'),
        ),
        migrations.AddField(
            model_name='center',
            name='zone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contacts.Zone'),
        ),
        migrations.AlterUniqueTogether(
            name='contacttag',
            unique_together={('contact', 'tag')},
        ),
    ]
